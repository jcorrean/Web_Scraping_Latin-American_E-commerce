load("~/Documents/DataMercadolibre.RData")
load("~/DataMercadolibre.RData")
load("DataMercadolibre.RData")
View(dataset)
#mercadolibredata$vectorprice <- as.numeric(mercadolibredata$vectorprice)
library(tidyverse)
usados <- mercadolibredata %>% filter(str_detect(vectorsold, 'Usado'))
mercadolibredata <- data.frame(dataset[2:11])
View(dataset)
View(mercadolibredata)
#mercadolibredata$vectorprice <- as.numeric(mercadolibredata$vectorprice)
library(tidyverse)
usados <- mercadolibredata %>% filter(str_detect(vectorsold, 'Usado'))
nuevos <- mercadolibredata %>% filter(str_detect(vectorsold, 'vendido'))
# Vamos a limpiar las variables removiendo caracteres no numéricos
nuevos$vectorsold <- as.numeric(gsub("[^0-9]", "", nuevos$vectorsold))
nuevos$goodfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$goodfeedback))
nuevos$neutralfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$neutralfeedback))
nuevos$badfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$badfeedback))
nuevos$price <- as.numeric(gsub("\\.", "", nuevos$vectorprice))
newdata <- nuevos[c(-1, -2)]
names(newdata)[1]<-"SI"
names(newdata)[2]<-"Item"
names(newdata)[3]<-"Country"
names(newdata)[4]<-"PI"
names(newdata)[5]<-"PF"
names(newdata)[6]<-"NeuF"
names(newdata)[7]<-"NF"
newdata$Country <- recode(newdata$Country, 'Republica Dominicana'= 'Dominican Rep')
newdata <- mutate(newdata, experienceunit = ifelse(grepl("año", experience), "Years",
ifelse(grepl("mes", experience), "Month", "Other")))
newdata$experience <- as.numeric(gsub("[^0-9]", "", nuevos$experience))
newdata <- mutate(newdata, history = ifelse(experienceunit == "Years", experience * 12, experience * 1))
newdata <- mutate(newdata, trust = PF / (PF + NeuF + NF))
rm(list=setdiff(ls(), "newdata"))
library(ggridges)
Fig1 <- ggplot(newdata, aes(x=newdata$trust, y=as.factor(newdata$Country))) + geom_density_ridges(fill="green", alpha = 0.4) + ylab("Country") + xlab("Trust") + theme(axis.text.y = element_text(family="Arial", face="bold", colour="black", size=rel(4))) + theme(axis.text.x = element_text(family="Arial", face="bold", colour="black", size=rel(2)))
library(psych)
countries <- describeBy(newdata$trust, group = newdata$Country, mat = TRUE)
library(ggrepel)
row.names(countries) <- countries$group1
Fig2 <- ggplot(countries, aes(x=mean, y=sd)) + geom_point() + geom_smooth() + geom_text_repel(label = rownames(countries)) + xlab("Average Trust Score") + ylab("Standard Deviation of Trust Score")
library(ggpubr)
ggarrange(Fig1, Fig2, ncol = 2, labels = c("A", "B"))
Fig1 <- ggplot(newdata, aes(x=newdata$trust, y=as.factor(newdata$Country))) + geom_density_ridges(fill="green", alpha = 0.4) + ylab("Country") + xlab("Trust") + theme(axis.text.y = element_text(family="Arial", face="bold", colour="black", size=rel(3))) + theme(axis.text.x = element_text(family="Arial", face="bold", colour="black", size=rel(2)))
library(psych)
countries <- describeBy(newdata$trust, group = newdata$Country, mat = TRUE)
library(ggrepel)
row.names(countries) <- countries$group1
Fig2 <- ggplot(countries, aes(x=mean, y=sd)) + geom_point() + geom_smooth() + geom_text_repel(label = rownames(countries)) + xlab("Average Trust Score") + ylab("Standard Deviation of Trust Score")
library(ggpubr)
ggarrange(Fig1, Fig2, ncol = 2, labels = c("A", "B"))
View(valid)
table(valid$country)
load("DataMercadolibre.RData")
mercadolibredata <- data.frame(dataset[2:11])
#mercadolibredata$vectorprice <- as.numeric(mercadolibredata$vectorprice)
library(tidyverse)
usados <- mercadolibredata %>% filter(str_detect(vectorsold, 'Usado'))
nuevos <- mercadolibredata %>% filter(str_detect(vectorsold, 'vendido'))
# Vamos a limpiar las variables removiendo caracteres no numéricos
nuevos$vectorsold <- as.numeric(gsub("[^0-9]", "", nuevos$vectorsold))
nuevos$goodfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$goodfeedback))
nuevos$neutralfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$neutralfeedback))
nuevos$badfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$badfeedback))
nuevos$price <- as.numeric(gsub("\\.", "", nuevos$vectorprice))
newdata <- nuevos[c(-1, -2)]
names(newdata)[1]<-"SI"
names(newdata)[2]<-"Item"
names(newdata)[3]<-"Country"
names(newdata)[4]<-"PI"
names(newdata)[5]<-"PF"
names(newdata)[6]<-"NeuF"
names(newdata)[7]<-"NF"
newdata$Country <- recode(newdata$Country, 'Republica Dominicana'= 'Dominican Rep')
newdata <- mutate(newdata, experienceunit = ifelse(grepl("año", experience), "Years",
ifelse(grepl("mes", experience), "Month", "Other")))
newdata$experience <- as.numeric(gsub("[^0-9]", "", nuevos$experience))
newdata <- mutate(newdata, history = ifelse(experienceunit == "Years", experience * 12, experience * 1))
newdata <- mutate(newdata, trust = PF / (PF + NeuF + NF))
rm(list=setdiff(ls(), "newdata"))
library(ggridges)
Fig1 <- ggplot(newdata, aes(x=newdata$trust, y=as.factor(newdata$Country))) + geom_density_ridges(fill="green", alpha = 0.4) + ylab("Country") + xlab("Trust") + theme(axis.text.y = element_text(family="Arial", face="bold", colour="black", size=rel(3))) + theme(axis.text.x = element_text(family="Arial", face="bold", colour="black", size=rel(2)))
Fig1
Fig1 <- ggplot(newdata, aes(x=newdata$trust, y=as.factor(newdata$Country))) + geom_density_ridges(fill="green", alpha = 0.4) + ylab("Country") + xlab("Trust") + theme(axis.text.y = element_text(family="Arial", face="bold", colour="black", size=rel(3))) + theme(axis.text.x = element_text(family="Arial", face="bold", colour="black", size=rel(1)))
Fig1
Fig1 <- ggplot(newdata, aes(x=newdata$trust, y=as.factor(newdata$Country))) + geom_density_ridges(fill="blue", alpha = 0.4) + ylab("Country") + xlab("Trust") + theme(axis.text.y = element_text(family="Arial", face="bold", colour="black", size=rel(3))) + theme(axis.text.x = element_text(family="Arial", face="bold", colour="black", size=rel(1)))
Fig1 <- ggplot(newdata, aes(x=newdata$trust, y=as.factor(newdata$Country))) + geom_density_ridges(fill="blue", alpha = 0.4) + ylab("Country") + xlab("Trust") + theme(axis.text.y = element_text(family="Arial", face="bold", colour="black", size=rel(3))) + theme(axis.text.x = element_text(family="Arial", face="bold", colour="black", size=rel(1)))
Fig1
Fig1 <- ggplot(newdata, aes(x=newdata$trust, y=as.factor(newdata$Country))) + geom_density_ridges(fill="blue", alpha = 0.4) + ylab("Country") + xlab("Vendors' Reputation") + theme(axis.text.y = element_text(family="Arial", face="bold", colour="black", size=rel(3))) + theme(axis.text.x = element_text(family="Arial", face="bold", colour="black", size=rel(1)))
Fig1
Fig1 <- ggplot(newdata, aes(x=newdata$trust, y=as.factor(newdata$Country))) + geom_density_ridges(fill="blue", alpha = 0.4) + ylab("Country") + xlab("Vendors' Reputation") + theme(axis.text.y = element_text(family="Arial", face="bold", colour="black", size=rel(3))) + theme(axis.text.x = element_text(family="Arial", face="bold", colour="black", size=rel(0.8)))
Fig1
Fig1 <- ggplot(newdata, aes(x=newdata$trust, y=as.factor(newdata$Country))) + geom_density_ridges(fill="blue", alpha = 0.4) + ylab("Country") + xlab("Vendors' Reputation") + theme(axis.text.y = element_text(family="Arial", face="bold", colour="black", size=rel(3))) + theme(axis.text.x = element_text(family="Arial", face="bold", colour="black", size=rel(0.2)))
Fig1
Fig1 <- ggplot(newdata, aes(x=newdata$trust, y=as.factor(newdata$Country))) + geom_density_ridges(fill="blue", alpha = 0.4) + ylab("Country") + xlab("Vendors' Reputation") + theme(axis.text.y = element_text(family="Arial", face="bold", colour="black")) + theme(axis.text.x = element_text(family="Arial", face="bold", colour="black", size=rel(0.2)))
Fig1
library(psych)
countries <- describeBy(newdata$trust, group = newdata$Country, mat = TRUE)
library(ggrepel)
row.names(countries) <- countries$group1
Fig2 <- ggplot(countries, aes(x=mean, y=sd)) + geom_point() + geom_smooth() + geom_text_repel(label = rownames(countries)) + xlab("Average Trust Score") + ylab("Standard Deviation of Trust Score")
library(ggpubr)
ggarrange(Fig1, Fig2, ncol = 2, labels = c("A", "B"))
Fig2 <- ggplot(countries, aes(x=mean, y=sd)) + geom_point() + geom_smooth() + geom_text_repel(label = rownames(countries)) + xlab("Average of Vendors' Reputation") + ylab("Standard Deviation of Vendors' Reputation")
library(ggpubr)
ggarrange(Fig1, Fig2, ncol = 2, labels = c("A", "B"))
load("DataMercadolibre.RData")
mercadolibredata <- data.frame(dataset[2:11])
#mercadolibredata$vectorprice <- as.numeric(mercadolibredata$vectorprice)
library(tidyverse)
usados <- mercadolibredata %>% filter(str_detect(vectorsold, 'Usado'))
nuevos <- mercadolibredata %>% filter(str_detect(vectorsold, 'vendido'))
# Vamos a limpiar las variables removiendo caracteres no numéricos
nuevos$vectorsold <- as.numeric(gsub("[^0-9]", "", nuevos$vectorsold))
nuevos$goodfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$goodfeedback))
nuevos$neutralfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$neutralfeedback))
nuevos$badfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$badfeedback))
nuevos$price <- as.numeric(gsub("\\.", "", nuevos$vectorprice))
newdata <- nuevos[c(-1, -2)]
names(newdata)[1]<-"SI"
names(newdata)[2]<-"Item"
names(newdata)[3]<-"Country"
names(newdata)[4]<-"PI"
names(newdata)[5]<-"PF"
names(newdata)[6]<-"NeuF"
names(newdata)[7]<-"NF"
newdata$Country <- recode(newdata$Country, 'Republica Dominicana'= 'Dominican Rep')
newdata <- mutate(newdata, experienceunit = ifelse(grepl("año", experience), "Years",
ifelse(grepl("mes", experience), "Month", "Other")))
newdata$experience <- as.numeric(gsub("[^0-9]", "", nuevos$experience))
newdata <- mutate(newdata, history = ifelse(experienceunit == "Years", experience * 12, experience * 1))
newdata <- mutate(newdata, trust = PF / (PF + NeuF + NF))
rm(list=setdiff(ls(), "newdata"))
library(ggridges)
Fig1 <- ggplot(newdata, aes(x=newdata$trust, y=as.factor(newdata$Country))) + geom_density_ridges(fill="blue", alpha = 0.4) + ylab("Country") + xlab("Vendors' Reputation") + theme(axis.text.y = element_text(family="Arial", face="bold", colour="black")) + theme(axis.text.x = element_text(family="Arial", face="bold", colour="black", size=rel(0.2)))
Fig1
## packages
library("sandwich")
library("lmtest")
library("MASS")
library("car")
install.packages(car)
View(newdata)
variable.names(newdata)
# Model 1 (as shown in Table 2 - Model 1)
model1 <- glm(SI ~ trust + history + log_price + PI,
data = newdata, family = "poisson")
# Model 1 (as shown in Table 2 - Model 1)
model1 <- glm(SI ~ trust + history + log(price) + PI,
data = newdata, family = "poisson")
summary(model1)
# Model 1 (as shown in Table 2 - Model 1)
model1 <- glm(SI ~ trust + trust^2,
data = newdata, family = "poisson")
summary(model1)
newdata$trust
(newdata$trust)^2
# Model 1 (as shown in Table 2 - Model 1)
model1 <- glm(SI ~ trust + (trust)^2,
data = newdata, family = "poisson")
summary(model1)
variable.names(newdata)
newdata$trustsq <- (newdata$trust)^2
load("DataMercadolibre.RData")
load("~/Documents/GitHub/Web_Scraping_Latin-American_E-commerce/ValidData.RData")
load("DataMercadolibre.RData")
mercadolibredata <- data.frame(dataset[2:11])
#mercadolibredata$vectorprice <- as.numeric(mercadolibredata$vectorprice)
library(tidyverse)
usados <- mercadolibredata %>% filter(str_detect(vectorsold, 'Usado'))
nuevos <- mercadolibredata %>% filter(str_detect(vectorsold, 'vendido'))
# Vamos a limpiar las variables removiendo caracteres no numéricos
nuevos$vectorsold <- as.numeric(gsub("[^0-9]", "", nuevos$vectorsold))
nuevos$goodfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$goodfeedback))
nuevos$neutralfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$neutralfeedback))
nuevos$badfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$badfeedback))
nuevos$price <- as.numeric(gsub("\\.", "", nuevos$vectorprice))
newdata <- nuevos[c(-1, -2)]
names(newdata)[1]<-"SI"
names(newdata)[2]<-"Item"
names(newdata)[3]<-"Country"
names(newdata)[4]<-"PI"
names(newdata)[5]<-"PF"
names(newdata)[6]<-"NeuF"
names(newdata)[7]<-"NF"
newdata$Country <- recode(newdata$Country, 'Republica Dominicana'= 'Dominican Rep')
newdata <- mutate(newdata, experienceunit = ifelse(grepl("año", experience), "Years",
ifelse(grepl("mes", experience), "Month", "Other")))
newdata$experience <- as.numeric(gsub("[^0-9]", "", nuevos$experience))
newdata <- mutate(newdata, history = ifelse(experienceunit == "Years", experience * 12, experience * 1))
newdata <- mutate(newdata, trust = PF / (PF + NeuF + NF))
newdata$trustsq <- newdata$trust^2
View(newdata)
newdata$trust^2
newdata$trust[1]
newdata$trust[1]^2
rm(list=setdiff(ls(), "newdata"))
# Model 1 (Table 2 - Model 1)
model1 <- glm(SI ~ trust + trustsq,
data = newdata, family = "poisson")
# Display the results
summary(model1)
# Model 1 (Table 2 - Model 1)
M1 <- glm(SI ~ trust + trustsq,
data = newdata, family = "poisson")
# Display the results
summary(M1)
load("DataMercadolibre.RData")
mercadolibredata <- data.frame(dataset[2:11])
#mercadolibredata$vectorprice <- as.numeric(mercadolibredata$vectorprice)
library(tidyverse)
usados <- mercadolibredata %>% filter(str_detect(vectorsold, 'Usado'))
nuevos <- mercadolibredata %>% filter(str_detect(vectorsold, 'vendido'))
# Vamos a limpiar las variables removiendo caracteres no numéricos
nuevos$vectorsold <- as.numeric(gsub("[^0-9]", "", nuevos$vectorsold))
nuevos$goodfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$goodfeedback))
nuevos$neutralfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$neutralfeedback))
nuevos$badfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$badfeedback))
nuevos$price <- as.numeric(gsub("\\.", "", nuevos$vectorprice))
newdata <- nuevos[c(-1, -2)]
names(newdata)[1]<-"SI"
names(newdata)[2]<-"Item"
names(newdata)[3]<-"Country"
names(newdata)[4]<-"PI"
names(newdata)[5]<-"PF"
names(newdata)[6]<-"NeuF"
names(newdata)[7]<-"NF"
newdata$Country <- recode(newdata$Country, 'Republica Dominicana'= 'Dominican Rep')
newdata <- mutate(newdata, experienceunit = ifelse(grepl("año", experience), "Years",
ifelse(grepl("mes", experience), "Month", "Other")))
newdata$experience <- as.numeric(gsub("[^0-9]", "", nuevos$experience))
newdata <- mutate(newdata, history = ifelse(experienceunit == "Years", experience * 12, experience * 1))
newdata <- mutate(newdata, trust = PF / (PF + NeuF + NF))
newdata$trustsq <- newdata$trust^2
rm(list=setdiff(ls(), "newdata"))
library(MASS) #  Keep it here in case you want to do overdispersion checks later
# Model 1 (Table 2 - Model 1)
M1 <- glm(SI ~ trust + trustsq,
data = newdata, family = "poisson")
# Display the results
summary(M1)
M2 <- glm(SI ~ trust + trustsq + history,
data = newdata, family = "poisson")
summary(M2)
1.737e+01
1.116e-03
M2 <- glm(SI ~ trust + trustsq + history + log(price),
data = newdata, family = "poisson")
M2 <- glm(SI ~ trust + trustsq + history,
data = newdata, family = "poisson")
summary(M2)
M3 <- glm(SI ~ trust + trustsq + history + log(price),
data = newdata, family = "poisson")
summary(M3)
-1.265e-01
M4 <- glm(SI ~ trust + history + log(price) + PI,
data = newdata, family = "poisson")
summary(M4)
M5 <- glm(SI ~ trust + trustsq + history + log(price) + PI,
data = newdata, family = "poisson")
summary(M5)
M6 <- glm(SI ~ 0 + trust + trustsq + history + log(price) + PI, #  Notice the 0 +
data = newdata, family = "poisson")
summary(M6)
6.306e+00
1.074e-01
library(stargazer)
install.packages("stargazer")
library(stargazer)
stargazer(M1, M2, M3, M4, M5, M6,
title = "Table 2: Regression Results",
dep.var.labels = "Sales (SI)",
covariate.labels = c("Trust", "Trust^2", "History", "Log(Price)", "Purchase Intention (PI)"),
omit.stat = c("all.chi2", "aic", "lr"), #  Optional: Omit statistics you don't want
type = "text")
stargazer(M1, M2, M3, M4, M5, M6,
title = "Table 2: Regression Results",
dep.var.labels = "Sales (SI)",
covariate.labels = c("Trust", "Trustsq", "history", "log(Price)", "PI"),
omit.stat = c("all.chi2", "aic", "lr"), #  Optional: Omit statistics you don't want
type = "text")
stargazer(M1, M2, M3, M4, M5, M6,
title = "Table 2: Regression Results",
dep.var.labels = "Sales (SI)",
covariate.labels = c("Trust", "Trustsq", "history", "log(Price)", "PI"),
#omit.stat = c("all.chi2", "aic", "lr"), #  Optional: Omit statistics you don't want
type = "text")
M2 <- glm(SI ~ trust + I(trust^2) + history,
data = newdata, family = "poisson")
summary(M2)
M3 <- glm(SI ~ trust + I(trust^2) + history + log(price),
data = newdata, family = "poisson")
summary(M3)
M4 <- glm(SI ~ trust + history + log(price) + PI,
data = newdata, family = "poisson")
summary(M4)
M5 <- glm(SI ~ trust + I(trust^2) + history + log(price) + PI,
data = newdata, family = "poisson")
summary(M5)
M6 <- glm(SI ~ trust + I(trust^2) + history + log(price) + PI - 1, # Explicitly removing the intercept
data = newdata, family = "poisson")
summary(M6)
stargazer(M1, M2, M3, M4, M5, M6,
title = "Table 2: Regression Results",
dep.var.labels = "Sales (SI)",
covariate.labels = c("Trust", "Trustsq", "history", "log(Price)", "PI"),
#omit.stat = c("all.chi2", "aic", "lr"), #  Optional: Omit statistics you don't want
type = "text")
# Model 1 (Table 2 - Model 1)
M1 <- glm(SI ~ trust + trustsq,
data = newdata, family = "poisson")
summary(M1)
M2 <- glm(SI ~ trust + trustsq + history,
data = newdata, family = "poisson")
summary(M2)
M3 <- glm(SI ~ trust + trustsq + history + log(price),
data = newdata, family = "poisson")
summary(M3)
M4 <- glm(SI ~ trust + history + log(price) + PI,
data = newdata, family = "poisson")
summary(M4)
M5 <- glm(SI ~ trust + trustsq + history + log(price) + PI,
data = newdata, family = "poisson")
summary(M5)
M6 <- glm(SI ~ 0 + trust + trustsq + history + log(price) + PI, #  Notice the 0 +
data = newdata, family = "poisson")
summary(M6)
library(stargazer)
stargazer(M1, M2, M3, M4, M5, M6,
title = "Table 2: Regression Results",
dep.var.labels = "Sales (SI)",
covariate.labels = c("Trust", "Trustsq", "history", "log(Price)", "PI"),
#omit.stat = c("all.chi2", "aic", "lr"), #  Optional: Omit statistics you don't want
type = "text")
M6A <- glm(SI ~ trust + I(trust^2) + history + log(price) + PI - 1, # Explicitly removing the intercept
data = newdata, family = "poisson")
summary(M6A)
summary(M6A) == summary(M6)
summary(M6)
summary(M6A)
summary(M6)
summary(M6A)
load("DataMercadolibre.RData")
mercadolibredata <- data.frame(dataset[2:11])
#mercadolibredata$vectorprice <- as.numeric(mercadolibredata$vectorprice)
library(tidyverse)
usados <- mercadolibredata %>% filter(str_detect(vectorsold, 'Usado'))
nuevos <- mercadolibredata %>% filter(str_detect(vectorsold, 'vendido'))
# Vamos a limpiar las variables removiendo caracteres no numéricos
nuevos$vectorsold <- as.numeric(gsub("[^0-9]", "", nuevos$vectorsold))
nuevos$goodfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$goodfeedback))
nuevos$neutralfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$neutralfeedback))
nuevos$badfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$badfeedback))
nuevos$price <- as.numeric(gsub("\\.", "", nuevos$vectorprice))
newdata <- nuevos[c(-1, -2)]
names(newdata)[1]<-"SI"
names(newdata)[2]<-"Item"
names(newdata)[3]<-"Country"
names(newdata)[4]<-"PI"
names(newdata)[5]<-"PF"
names(newdata)[6]<-"NeuF"
names(newdata)[7]<-"NF"
newdata$Country <- recode(newdata$Country, 'Republica Dominicana'= 'Dominican Rep')
newdata <- mutate(newdata, experienceunit = ifelse(grepl("año", experience), "Years",
ifelse(grepl("mes", experience), "Month", "Other")))
newdata$experience <- as.numeric(gsub("[^0-9]", "", nuevos$experience))
newdata <- mutate(newdata, history = ifelse(experienceunit == "Years", experience * 12, experience * 1))
newdata <- mutate(newdata, trust = PF / (PF + NeuF + NF))
newdata$trustsq <- newdata$trust^2
rm(list=setdiff(ls(), "newdata"))
library(MASS)
NB_M1 <- glm.nb(SI ~ trust + I(trust^2),
data = newdata)
summary(NB_M1)
NB_M2 <- glm.nb(SI ~ trust + I(trust^2) + history,
data = newdata)
summary(NB_M2)
NB_M3 <- glm.nb(SI ~ trust + I(trust^2) + history + log(price),
data = newdata)
summary(NB_M3)
NB_M4 <- glm.nb(SI ~ trust + history + log(price) + PI,
data = newdata)
summary(NB_M4)
NB_M5 <- glm.nb(SI ~ trust + I(trust^2) + history + log(price) + PI,
data = newdata)
summary(NB_M5)
NB_M6 <- glm.nb(SI ~ trust + I(trust^2) + history + log(price) + PI - 1, # Removing the intercept for Model 6
data = newdata)
summary(NB_M6)
library(stargazer)
stargazer(NB_M1, NB_M2, NB_M3, NB_M4, NB_M5, NB_M6,
title = "Table 3: Negative Binomial Regression Results",
dep.var.labels = "Sales (SI)",
covariate.labels = c("Trust", "Trust^2", "History", "Log(Price)", "Purchase Intention (PI)"),
omit.stat = c("aic", "theta"), # Optional: Omit AIC and theta
type = "text")
stargazer(NB_M1, NB_M2, NB_M3, NB_M4, NB_M5, NB_M6,
title = "Table 3: Negative Binomial Regression Results",
dep.var.labels = "Sales (SI)",
covariate.labels = c("Trust", "Trust^2", "History", "Log(Price)", "Purchase Intention (PI)"),
type = "text")
stargazer(NB_M1, NB_M2, NB_M3, NB_M4, NB_M5, NB_M6,
title = "Table 3: Negative Binomial Regression Results",
dep.var.labels = "Sales (SI)",
covariate.labels = c("Trust", "Trustsq", "History", "log(Price)", "PI"),
type = "text")
load("DataMercadolibre.RData")
mercadolibredata <- data.frame(dataset[2:11])
#mercadolibredata$vectorprice <- as.numeric(mercadolibredata$vectorprice)
library(tidyverse)
usados <- mercadolibredata %>% filter(str_detect(vectorsold, 'Usado'))
nuevos <- mercadolibredata %>% filter(str_detect(vectorsold, 'vendido'))
# Vamos a limpiar las variables removiendo caracteres no numéricos
nuevos$vectorsold <- as.numeric(gsub("[^0-9]", "", nuevos$vectorsold))
nuevos$goodfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$goodfeedback))
nuevos$neutralfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$neutralfeedback))
nuevos$badfeedback <- as.numeric(gsub("[^0-9]", "", nuevos$badfeedback))
nuevos$price <- as.numeric(gsub("\\.", "", nuevos$vectorprice))
newdata <- nuevos[c(-1, -2)]
names(newdata)[1]<-"SI"
names(newdata)[2]<-"Item"
names(newdata)[3]<-"Country"
names(newdata)[4]<-"PI"
names(newdata)[5]<-"PF"
names(newdata)[6]<-"NeuF"
names(newdata)[7]<-"NF"
newdata$Country <- recode(newdata$Country, 'Republica Dominicana'= 'Dominican Rep')
newdata <- mutate(newdata, experienceunit = ifelse(grepl("año", experience), "Years",
ifelse(grepl("mes", experience), "Month", "Other")))
newdata$experience <- as.numeric(gsub("[^0-9]", "", nuevos$experience))
newdata <- mutate(newdata, history = ifelse(experienceunit == "Years", experience * 12, experience * 1))
newdata <- mutate(newdata, trust = PF / (PF + NeuF + NF))
newdata$trustsq <- newdata$trust^2
rm(list=setdiff(ls(), "newdata"))
library(MASS) #  Keep it here in case you want to do overdispersion checks later
# Model 1 (Table 2 - Model 1)
M1 <- glm(SI ~ trust + trustsq,
data = newdata, family = "poisson")
summary(M1)
M2 <- glm(SI ~ trust + trustsq + history,
data = newdata, family = "poisson")
summary(M2)
M3 <- glm(SI ~ trust + trustsq + history + log(price),
data = newdata, family = "poisson")
summary(M3)
M4 <- glm(SI ~ trust + history + log(price) + PI,
data = newdata, family = "poisson")
summary(M4)
M5 <- glm(SI ~ trust + trustsq + history + log(price) + PI,
data = newdata, family = "poisson")
summary(M5)
M6 <- glm(SI ~ 0 + trust + trustsq + history + log(price) + PI, #  Notice the 0 +
data = newdata, family = "poisson")
summary(M6)
library(stargazer)
stargazer(M1, M2, M3, M4, M5, M6,
title = "Table 2: Regression Results",
dep.var.labels = "Sales (SI)",
covariate.labels = c("Trust", "Trustsq", "history", "log(Price)", "PI"),
#omit.stat = c("all.chi2", "aic", "lr"), #  Optional: Omit statistics you don't want
type = "text")
library(margins)
marginal_effects_M6 <- margins(M6)
install.packages("margins")
library(margins)
marginal_effects_M6 <- margins(M6)
summary(marginal_effects_M6)
# Si deseas una tabla formateada de los efectos marginales
library(broom)
tidy_margins_M6 <- tidy(marginal_effects_M6)
print(tidy_margins_M6)
